
@model frst_db_entity_framweork_again.Context.db_student

@{
    ViewBag.Title = "Student";
}


<style>
    .error{
        color:red;
    }
</style>

@using (Html.BeginForm("AddStudent", "Student", FormMethod.Post))
{
<div class="container">
    <div class="form-group">
        @Html.HiddenFor(x=>x.Id)
        <label>Name</label>
        @Html.ValidationMessageFor(x=>x.Name,"",new  { @class="error"})
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })

    </div>
    <div class="form-group">
        <label>Father Name</label>
        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "error" })

        @Html.TextBoxFor(x => x.Fname, new { @class = "form-control" })

    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "error" })

        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })

    </div>
    <div class="form-group">
        <label>Mobile number</label>
        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "error" })

        @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control" })

    </div>
    <div class="form-group">
        <label>Description</label>
        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "error" })

        @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @rows = "10" })

    </div>

    <div class="form-group">
        <button type="submit" class="btn-btn-primary">Submit</button>
        <button type="submit" class="btn-danger">Cancel</button>
    </div>

</div>
}

